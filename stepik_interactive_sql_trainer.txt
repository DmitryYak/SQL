+---------+-----------------------+------------------+--------+--------+
| book_id | title                 | author           | price  | amount |
+---------+-----------------------+------------------+--------+--------+
| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
+---------+-----------------------+------------------+--------+--------+

1.1 Отношение (таблица)
Task 1.
Сформулируйте SQL запрос для создания таблицы book, занесите  его в окно кода (расположено ниже)  и отправьте на проверку (кнопка Отправить). Структура таблицы book:
create table book (book_id INT PRIMARY KEY AUTO_INCREMENT, title VARCHAR(50), author VARCHAR(30),price DECIMAL(8, 2), amount INT);

Task 2.
Занесите новую строку в таблицу book (текстовые значения (тип VARCHAR) заключать либо в двойные, либо в одинарные кавычки):
insert into book (book_id ,title,author,price, amount) values (1,'Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3); 

Task 3.
Занесите три последние записи в таблицуbook,  первая запись уже добавлена на предыдущем шаге:
insert into book ( book_id, title, author, price, amount) values (2, 'Белая гвардия', 'Булгаков М.А.',	540.50,	5);
insert into book ( book_id, title, author, price, amount) values (3, 'Идиот', 'Достоевский Ф.М.',	460.00, 10);
insert into book ( book_id, title, author, price, amount) values (4, 'Братья Карамазовы', 'Достоевский Ф.М.',	799.01,	2);

1.2 Выборка данных
Task 4.
Вывести информацию о всех книгах, хранящихся на складе.
select * from book;

Task 5.
Выбрать авторов, название книг и их цену из таблицы book.
select author, title, price from book;

Task 6.
Выбрать названия книг и авторов из таблицы book, для поля title задать имя(псевдоним) Название, для поля author –  Автор.
select title as Название, author as Автор from book;

Taask 7.
Для упаковки каждой книги требуется один лист бумаги, цена которого 1 рубль 65 копеек. Посчитать стоимость упаковки для каждой книги (сколько денег потребуется, чтобы упаковать все экземпляры книги). В запросе вывести название книги, ее количество и стоимость упаковки, последний столбец назвать pack. 
select title, amount, amount * 1.65 as pack from book;

Task 8.
В конце года цену всех книг на складе пересчитывают – снижают ее на 30%. Написать SQL запрос, который из таблицы book выбирает названия, авторов, количества и вычисляет новые цены книг. Столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой.
select title,
author,
amount,
ROUND (price - (price * 0.3),2) AS new_price from book;

Task 9.
При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте книги Сергея Есенина. Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. Значение округлить до двух знаков после запятой.
select author, title, ROUND(if (author = 'Булгаков М.А.', price * 1.1, 
if(author = 'Есенин С.А.', price * 1.05, price *1)), 2) as new_price from book; 

Task 10.
Вывести автора, название  и цены тех книг, количество которых меньше 10.
select author, title, price from book where amount < 10;

Task 11.
Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.
select title, author, price, amount from book where (price < 500 or price > 600) and price * amount >= 5000;

Task 12.
Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .
select title, author from book
where price between 540.50 and 800
and amount in (2,3,5,7);

Task 13.
Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).
select author, title
from book
where amount between 2 and 14
order by 1 desc, title;

Task 14.
Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. Информацию отсортировать по названию книги в алфавитном порядке.
select title, author from book 
where title like '%_ _%' 
and author like '%_С.%'
order by 1;

Task 15.
Придумайте один или несколько запросов к нашей таблице book. Проверьте, правильно ли они работают.
select title, author, price * amount as sum from book where author like 'Д%' order by 3;

1.3 Запросы, групповые операции
Task 16.
Отобрать различные (уникальные) элементы столбца amount таблицы book.
select distinct amount
from book;

Task 17.
Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.
select author as Автор, count(amount) as Различных_книг, sum(amount) as Количество_экземпляров from book group by author;

Task 18.
Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.
select author, min(price) as Минимальная_цена, max(price) as Максимальная_цена, avg(price) as Средняя_цена from book group by author;

Task 19.
Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой. В запросе для расчета НДС(tax)  и Стоимости без НДС(S_without_tax)
select author, sum(price * amount) as Стоимость, 
round((sum(price * amount)*(18/100))/(1+(18/100)), 2) as НДС,
round(sum(price * amount)/(1+(18/100)), 2) as Стоимость_без_НДС
from book group by author;

Task 20.
Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.
select distinct min(price) as Минимальная_цена,max(price) as Максимальная_цена, round(avg(price),2) as Средняя_цена from book;

Task 21.
Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
SELECT ROUND(AVG(price),2) AS Средняя_цена,
ROUND(SUM(price * amount),2) AS Стоимость
FROM book
WHERE amount >= 5 AND amount <=14;

Task 22.
Вывести максимальнуюи минимальную цену книг каждого автора, кроме Есенина, количество экземпляров книг которого больше 10. 
SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
WHERE author <> 'Есенин С.А.'
GROUP BY author
HAVING SUM(amount) > 10;

Task 23.
Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.
SELECT author, SUM(price * amount) AS Стоимость
FROM book
WHERE title <> 'Идиот'AND title <> 'Белая гвардия'
GROUP BY author
HAVING Стоимость > 5000
ORDER BY Стоимость DESC;

Task 24.
Придумайте один или несколько запросов к нашей таблице book, используя групповые функции. Проверьте, правильно ли они работают.
SELECT author, round(avg(price*amount ),2) AS Средняя_стоимость_книг
FROM book
WHERE price < 600
GROUP BY author
HAVING author <> 'Булгаков М.А.'
ORDER BY Средняя_стоимость_книг

1.4 Вложенные запросы
Task 25.
Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.
SELECT author, title, price
FROM book
WHERE price <= (
    SELECT AVG(price)
    FROM book
    )
ORDER BY price DESC;

Task 26.
Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.
SELECT author, title, price
FROM book
WHERE price <= (
    SELECT MIN(price)
    FROM book)+150
ORDER BY(price);

Task 27.
Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.
SELECT author, title, amount
FROM book
WHERE amount IN (
    SELECT amount
    FROM book
    group by amount
    having count(amount) = 1
    )
    
Task 28.
Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.
SELECT author, title, price
FROM book
WHERE price < ANY (
    SELECT MIN(price)
    FROM book
    GROUP BY author
    );
    
Task 29.
Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.
SELECT title, author, amount,
    (SELECT MAX(amount)
     FROM book) - amount as Заказ
FROM book
HAVING Заказ <> 0

Task 30.
Придумайте один или несколько запросов к нашей таблице book, используя вложенные запросы. Проверьте, правильно ли они работают.
SELECT title, author, price,
    (SELECT min(price)+180
    FROM book)AS 'Всё по минимальной цене с учетом доставки(180 р.)'
FROM book
where price <700

1.5 Запросы корректировки данных
Task 31.
Создать таблицу поставка (supply), которая имеет ту же структуру, что и таблиц book.

Поле	Тип, описание
supply_id	INT PRIMARY KEY AUTO_INCREMENT
title	VARCHAR(50)
author	VARCHAR(30)
price	DECIMAL(8, 2)
amount	INT

CREATE TABLE supply 
(supply_id INT PRIMARY KEY AUTO_INCREMENT,
 title VARCHAR(50), author VARCHAR(30), 
 price DECIMAL(8,2), amount INT) 

Task 32.
Занесите в таблицу supply четыре записи, чтобы получилась следующая таблица:

supply_id	title	author	price	amount
1	Лирика	Пастернак Б.Л.	518.99	2
2	Черный человек 	Есенин С.А.	570.20	6
3	Белая гвардия	Булгаков М.А.	540.50	7
4	Идиот	Достоевский Ф.М.	360.80	3
INSERT INTO supply 
(supply_id,title,author,price,amount)
VALUES
(1, 'Лирика', 'Пастернак Б.Л.', 518.99, 2),
(2, 'Черный человек', 'Есенин С.А.', 570.20, 6),
(3, 'Белая гвардия', 'Булгаков М.А.', 540.50, 7),
(4, 'Идиот', 'Достоевский Ф.М.', 360.80, 3);

Task 33.
Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.
INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
FROM supply
WHERE author <> 'Булгаков М.А.' AND author <> 'Достоевский Ф.М.'

Task 34.
Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.
INSERT INTO book (title,author, price, amount)
SELECT title, author,price, amount
FROM supply
WHERE author NOT IN (
    SELECT author
    FROM book);
SELECT * FROM book;

Task 35.
Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10, включая границы.
UPDATE book
SET price = price * 0.9
WHERE amount BETWEEN 5 AND 10;

SELECT * FROM book;

Task 36.
В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало количество экземпляров книг, указанных в столбце amount. А цену тех книг, которые покупатель не заказывал, снизить на 10%.
UPDATE book
SET buy = IF(amount<buy,amount,buy),
price = IF(buy = 0, price * 0.9,price);

SELECT * FROM book;

Task 37.
Для тех книг в таблице book , которые есть в таблице supply, не только увеличить их количество в таблице book ( увеличить их количество на значение столбца amountтаблицы supply), но и пересчитать их цену (для каждой книги найти сумму цен из таблиц book и supply и разделить на 2).
UPDATE book, supply
SET book.amount = book.amount + supply.amount,
book.price = (book.price + supply.price)/2
WHERE book.title = supply.title AND book.author = supply.author;

SELECT * FROM book;

Task 38.
Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.
DELETE FROM supply
WHERE author IN(
    SELECT author
    FROM book
    GROUP BY author
    HAVING SUM(amount)>10
    );

SELECT * FROM supply;

Task 39.
Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых в таблице book меньше среднего количества экземпляров книг в таблице book. В таблицу включить столбец   amount, в котором для всех книг указать одинаковое значение - среднее количество экземпляров книг в таблице book.
CREATE TABLE ordering AS
SELECT author, title, (
    SELECT ROUND(AVG(amount))
    FROM book
    ) AS amount
FROM book
WHERE amount < (
    SELECT AVG(amount)
     FROM book);

SELECT * FROM ordering;

Task 40.
Придумайте один или несколько запросов корректировки данных к  таблицамbook и  supply . Проверьте, правильно ли они работают.
UPDATE book, supply
SET book.amount = book.amount + supply.amount
WHERE book.price < 500;

SELECT * FROM book;
SELECT * FROM supply;

1.6 Таблица "Командировки", запросы на выборку
trip_id	name	city	per_diem	date_first	date_last
INT PRIMARY KEY AUTO_INCREMENT	VARCHAR(30)	VARCHAR(25)	DECIMAL(8,2)	DATЕ	DATE
1	Баранов П.Е.	Москва	700	2020-01-12	2020-01-17
2	Абрамова К.А.	Владивосток	450	2020-01-14	2020-01-27
3	Семенов И.В.	Москва	700	2020-01-23	2020-01-31
4	Ильиных Г.Р.	Владивосток	450	2020-01-12	2020-02-02
5	Колесов С.П.	Москва	700	2020-02-01	2020-02-06
6	Баранов П.Е.	Москва	700	2020-02-14	2020-02-22
7	Абрамова К.А.	Москва	700	2020-02-23	2020-03-01
8	Лебедев Т.К.	Москва	700	2020-03-03	2020-03-06
9	Колесов С.П.	Новосибирск	450	2020-02-27	2020-03-12
10	Семенов И.В.	Санкт-Петербург	700	2020-03-29	2020-04-05
11	Абрамова К.А.	Москва	700	2020-04-06	2020-04-14
12	Баранов П.Е.	Новосибирск	450	2020-04-18	2020-05-04
13	Лебедев Т.К.	Томск	450	2020-05-20	2020-05-31
14	Семенов И.В.	Санкт-Петербург	700	2020-06-01	2020-06-03
15	Абрамова К.А.	Санкт-Петербург	700	2020-05-28	2020-06-04
16	Федорова А.Ю.	Новосибирск	450	2020-05-25	2020-06-04
17	Колесов С.П.	Новосибирск	450	2020-06-03	2020-06-12
18	Федорова А.Ю.	Томск	450	2020-06-20	2020-06-26
19	Абрамова К.А.	Владивосток	450	2020-07-02	2020-07-13
20	Баранов П.Е.	Воронеж	450	2020-07-19	2020-07-25

Task 41.
Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде. В результат включить столбцы name, city, per_diem, date_first, date_last.
SELECT name, city, per_diem, date_first, date_last
FROM trip
WHERE name LIKE('%а %')
ORDER BY date_last DESC

Task 42.
Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве.
SELECT DISTINCT name 
FROM trip
WHERE city IN ('Москва')
ORDER BY name;


